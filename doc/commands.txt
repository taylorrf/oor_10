gem install rmagick -v '2.13.2'

If you saw such error:
Can't install RMagick 2.13.2. Can't find MagickWand.h.

convert --version
Version: ImageMagick 6.7.8-8 2012-08-09 Q16 http://www.imagemagick.org
Copyright: Copyright (C) 1999-2012 ImageMagick Studio LLC
Features: OpenMP OpenCL


Then do find:
mdfind MagickCore.pc

/opt/ImageMagick/share/doc/ImageMagick-6.7.8/www/changelog.html
/opt/ImageMagick/share/doc/ImageMagick-6.7.8/ChangeLog
/opt/ImageMagick/lib/pkgconfig/MagickCore.pc

Then in .bash_profile:
export PKG_CONFIG_PATH="/opt/ImageMagick/lib/pkgconfig:$PKG_CONFIG_PATH"


http://stackoverflow.com/questions/13942443/error-installing-rmagick-on-mountain-lion
Then if you see this:
Can't install RMagick 2.13.1. Can't find the ImageMagick library or one of the dependent libraries. Check the mkmf.log file for more detailed information.
checking for InitializeMagick() in -lMagickCore... no
checking for InitializeMagick() in -lMagick... no
checking for InitializeMagick() in -lMagick++... no

just use 2.13.2


http://stackoverflow.com/questions/7319445/rmagick-leads-to-server-shutdown


brew uninstall imagemagick
brew remove imagemagick
rm -rf `brew --cache imagemagick`
brew install -f imagemagick --disable-openmp
gem pristine rmagick




FORGET ALL ABOVE. TRY DON'T MESS WITH RMAGICK. Start from here


rake db:create
rails g model upload （
t.references :uploadable, :polymorphic => true，into migration to get uploadable_id:integer uploadable_type)
rails generate paperclip upload pic
rails g scaffold card (greeting:text address:hstore template_id:integer status)


heroku create
git init
git add .
git commit -a -m 'init commit'
git push git@heroku.com:dry-wildwood-2977.git master
heroku run rake db:migrate
git commit -a -m 'config.assets.compile = true'
heroku logs --tail --app dry-wildwood-2977





ActionView::Template::Error (undefined method `asset_url' for #<#<Class:0x007f93b38e1810>:0x007f93b3f98348>
  (in /usr/local/rvm/gems/ruby-1.9.3-p194/gems/jcrop-rails-v2-0.9.12.2/app/assets/stylesheets/jquery.Jcrop.css.erb)):
    1: <%= stylesheet_link_tag 'jquery.Jcrop' %>
    2: <%= javascript_include_tag 'jquery.Jcrop' %>
    3: 
    4: <script type="text/javascript" charset="utf-8">
  app/views/cards/crop.html.erb:1:in `_app_views_cards_crop_html_erb___2828885222921879906_70136159677040'
  app/controllers/cards_controller.rb:65:in `block (2 levels) in update'
  app/controllers/cards_controller.rb:63:in `update'

  background: #ffffff url(<%= asset_url("Jcrop.gif") %>); does not work in /usr/local/rvm/gems/ruby-1.9.3-p194/gems/jcrop-rails-v2-0.9.12.2/app/assets/stylesheets/jquery.Jcrop.css.erb




Heroku: ActionView::Template::Error (.css isn’t precompiled)

As I was deploying an application recently, I ran into this error:

ActionView::Template::Error (gmaps4rails.css isn't precompiled):
This, of course, is caused by the new asset pipeline and the Rails 3.1 defaults. If you have the same trouble, it’s a quick solution. Production needs to be told to compile assets. Open up config/environments/production.rb and change the following line from false to true:

  # Don't fallback to assets pipeline if a precompiled asset is missed
  config.assets.compile = true